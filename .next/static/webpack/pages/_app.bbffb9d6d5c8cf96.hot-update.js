"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store/connectWalletSlice.ts":
/*!*************************************!*\
  !*** ./store/connectWalletSlice.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"connectWalletSlice\": function() { return /* binding */ connectWalletSlice; },\n/* harmony export */   \"selectConnectWalletState\": function() { return /* binding */ selectConnectWalletState; },\n/* harmony export */   \"setConnectWalletState\": function() { return /* binding */ setConnectWalletState; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n\n// Initial state\nvar initialState = {\n    connectWalletState: false\n};\n// Slice\nvar connectWalletSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"connectWallet\",\n    initialState: initialState,\n    reducers: {\n        // Action to set connected wallet\n        setConnectWalletState: function setConnectWalletState(state, action) {\n            state.connectWalletState = action.payload;\n        }\n    }\n});\nvar setConnectWalletState = connectWalletSlice.actions.setConnectWalletState;\nvar selectConnectWalletState = function(state) {\n    return state.connectWallet.connectWalletState;\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (connectWalletSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdG9yZS9jb25uZWN0V2FsbGV0U2xpY2UudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQztBQVUvQyxnQkFBZ0I7QUFDaEIsSUFBTUMsWUFBWSxHQUF1QjtJQUN2Q0Msa0JBQWtCLEVBQUUsS0FBSztDQUMxQjtBQUVELFFBQVE7QUFDRCxJQUFNQyxrQkFBa0IsR0FBR0gsNkRBQVcsQ0FBQztJQUM1Q0ksSUFBSSxFQUFFLGVBQWU7SUFDckJILFlBQVksRUFBWkEsWUFBWTtJQUNaSSxRQUFRLEVBQUU7UUFDUixpQ0FBaUM7UUFDakNDLHFCQUFxQixFQUFyQkEsU0FBQUEscUJBQXFCLENBQUNDLEtBQUssRUFBRUMsTUFBTSxFQUFFO1lBQ25DRCxLQUFLLENBQUNMLGtCQUFrQixHQUFHTSxNQUFNLENBQUNDLE9BQU8sQ0FBQztTQUMzQztLQUNGO0NBQ0YsQ0FBQyxDQUFDO0FBRUksSUFBTSxxQkFBdUIsR0FBS04sa0JBQWtCLENBQUNPLE9BQU8sQ0FBcERKLHFCQUFxQixDQUFnQztBQUU3RCxJQUFNSyx3QkFBd0IsR0FBRyxTQUFDSixLQUFlO1dBQ3REQSxLQUFLLENBQUNLLGFBQWEsQ0FBQ1Ysa0JBQWtCO0NBQUEsQ0FBQztBQUV6QywrREFBZUMsa0JBQWtCLENBQUNVLE9BQU8sRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zdG9yZS9jb25uZWN0V2FsbGV0U2xpY2UudHM/M2I5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTbGljZSB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XG5pbXBvcnQgeyBBcHBTdGF0ZSB9IGZyb20gXCIuL3N0b3JlXCI7XG5pbXBvcnQgeyBIWURSQVRFIH0gZnJvbSBcIm5leHQtcmVkdXgtd3JhcHBlclwiO1xuXG4vLyBTbGljZTogYSBjb2xsZWN0aW9uIG9mIFJlZHV4IHJlZHVjZXIgbG9naWMgYW5kIGFjdGlvbnMgZm9yIGEgc2luZ2xlIGZlYXR1cmUgaW4gb3VyIGFwcC5cblxuZXhwb3J0IGludGVyZmFjZSBDb25uZWN0V2FsbGV0U3RhdGUge1xuICBjb25uZWN0V2FsbGV0U3RhdGU6IGJvb2xlYW47XG59XG5cbi8vIEluaXRpYWwgc3RhdGVcbmNvbnN0IGluaXRpYWxTdGF0ZTogQ29ubmVjdFdhbGxldFN0YXRlID0ge1xuICBjb25uZWN0V2FsbGV0U3RhdGU6IGZhbHNlLFxufTtcblxuLy8gU2xpY2VcbmV4cG9ydCBjb25zdCBjb25uZWN0V2FsbGV0U2xpY2UgPSBjcmVhdGVTbGljZSh7XG4gIG5hbWU6IFwiY29ubmVjdFdhbGxldFwiLFxuICBpbml0aWFsU3RhdGUsXG4gIHJlZHVjZXJzOiB7XG4gICAgLy8gQWN0aW9uIHRvIHNldCBjb25uZWN0ZWQgd2FsbGV0XG4gICAgc2V0Q29ubmVjdFdhbGxldFN0YXRlKHN0YXRlLCBhY3Rpb24pIHtcbiAgICAgIHN0YXRlLmNvbm5lY3RXYWxsZXRTdGF0ZSA9IGFjdGlvbi5wYXlsb2FkO1xuICAgIH0sXG4gIH0sXG59KTtcblxuZXhwb3J0IGNvbnN0IHsgc2V0Q29ubmVjdFdhbGxldFN0YXRlIH0gPSBjb25uZWN0V2FsbGV0U2xpY2UuYWN0aW9ucztcblxuZXhwb3J0IGNvbnN0IHNlbGVjdENvbm5lY3RXYWxsZXRTdGF0ZSA9IChzdGF0ZTogQXBwU3RhdGUpID0+XG4gIHN0YXRlLmNvbm5lY3RXYWxsZXQuY29ubmVjdFdhbGxldFN0YXRlO1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0V2FsbGV0U2xpY2UucmVkdWNlcjtcbiJdLCJuYW1lcyI6WyJjcmVhdGVTbGljZSIsImluaXRpYWxTdGF0ZSIsImNvbm5lY3RXYWxsZXRTdGF0ZSIsImNvbm5lY3RXYWxsZXRTbGljZSIsIm5hbWUiLCJyZWR1Y2VycyIsInNldENvbm5lY3RXYWxsZXRTdGF0ZSIsInN0YXRlIiwiYWN0aW9uIiwicGF5bG9hZCIsImFjdGlvbnMiLCJzZWxlY3RDb25uZWN0V2FsbGV0U3RhdGUiLCJjb25uZWN0V2FsbGV0IiwicmVkdWNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./store/connectWalletSlice.ts\n"));

/***/ })

});